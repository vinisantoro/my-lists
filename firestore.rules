rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helpers -------------------------------------------------------
    function getList(listId) {
      return get(/databases/$(database)/documents/lists/$(listId)).data;
    }

    function signedIn() {
      return request.auth != null;
    }

    function isOwner(list) {
      return signedIn() && request.auth.uid == list.ownerId;
    }

    function isWriter(list) {
      return signedIn() && list.writerEmails != null && request.auth.token.email in list.writerEmails;
    }

    function canWrite(list) {
      return isOwner(list) || isWriter(list);
    }

    function canRead(list) {
      return isOwner(list) || (list.sharedEmails != null && request.auth.token.email in list.sharedEmails);
    }

    // Items ---------------------------------------------------------
    match /items/{itemId} {
      allow read: if signedIn() && canRead(getList(resource.data.listId));
      allow write: if signedIn() && canWrite(getList(resource.data.listId));
      allow create: if signedIn()
        && request.resource.data.userId == getList(request.resource.data.listId).ownerId
        && canWrite(getList(request.resource.data.listId))
        && request.resource.data.name is string
        && request.resource.data.brand is string
        && request.resource.data.category is string
        && request.resource.data.listId is string
        && request.resource.data.rating is number
        && request.resource.data.name.size() > 0 && request.resource.data.name.size() <= 200
        && request.resource.data.brand.size() > 0 && request.resource.data.brand.size() <= 100
        && request.resource.data.category.size() > 0 && request.resource.data.category.size() <= 50
        && request.resource.data.rating >= 0 && request.resource.data.rating <= 5;
    }

    // User-specific collections ------------------------------------
    match /userPreferences/{userId} {
      allow read, write: if signedIn() && request.auth.uid == userId;
    }

    match /userProfiles/{userId} {
      allow read, write: if signedIn() && request.auth.uid == userId;
    }

    // Shared list management ---------------------------------------
    match /sharedLists/{shareId} {
      allow create: if signedIn() && request.auth.uid == request.resource.data.ownerId
        && request.resource.data.invitedEmail is string
        && request.resource.data.permission in ['read', 'write']
        && request.resource.data.listId is string;
      allow read: if signedIn() && (
        request.auth.uid == resource.data.ownerId ||
        request.auth.token.email == resource.data.invitedEmail
      );
      allow delete, update: if signedIn() && request.auth.uid == resource.data.ownerId;
    }

    // List documents -----------------------------------------------
    match /lists/{listId} {
      allow read: if signedIn() && canRead(resource.data);
      allow write: if signedIn() && request.auth.uid == resource.data.ownerId;
      allow create: if signedIn() && request.auth.uid == request.resource.data.ownerId
        && request.resource.data.name is string
        && request.resource.data.name.size() > 0 && request.resource.data.name.size() <= 100;
    }
  }
}
